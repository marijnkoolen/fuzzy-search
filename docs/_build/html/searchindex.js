Search.setIndex({"docnames": ["index", "source/fuzzy_search", "source/fuzzy_search.match", "source/fuzzy_search.pattern", "source/fuzzy_search.phrase", "source/fuzzy_search.search", "source/fuzzy_search.tokenization", "source/modules", "source/resolution_phrase_model", "source/setup", "source/test"], "filenames": ["index.rst", "source/fuzzy_search.rst", "source/fuzzy_search.match.rst", "source/fuzzy_search.pattern.rst", "source/fuzzy_search.phrase.rst", "source/fuzzy_search.search.rst", "source/fuzzy_search.tokenization.rst", "source/modules.rst", "source/resolution_phrase_model.rst", "source/setup.rst", "source/test.rst"], "titles": ["Welcome to fuzzy-search\u2019s documentation!", "fuzzy_search package", "fuzzy_search.match package", "fuzzy_search.pattern package", "fuzzy_search.phrase package", "fuzzy_search.search package", "fuzzy_search.tokenization package", "fuzzy-search", "resolution_phrase_model module", "setup module", "test package"], "terms": {"The": [0, 5], "packag": [0, 7], "i": [0, 1, 2, 3, 4, 5, 6], "python": 0, "librari": 0, "keyword": [0, 1], "phrase": [0, 1, 2, 3, 5, 7], "digit": 0, "ocr": 0, "htr": 0, "histor": 0, "contain": [0, 2, 3, 5], "languag": 0, "us": [0, 1, 3, 4, 5, 6], "spell": [0, 4], "variat": 0, "text": [0, 1, 2, 3, 4, 5, 6], "recognit": 0, "error": 0, "allow": [0, 1, 3, 4, 5], "you": [0, 1], "creat": 0, "simpl": 0, "list": [0, 1, 2, 3, 4, 5, 6], "find": [0, 1, 2, 5], "approxim": 0, "match": [0, 1, 3, 4, 5, 7], "ani": [0, 1, 2, 3, 4, 5, 6], "length": [0, 2, 4, 6], "It": [0, 5], "ha": [0, 2, 3, 4, 6], "been": [0, 2], "develop": 0, "case": [0, 2, 5], "where": [0, 1, 5], "ar": [0, 1, 2, 3, 4, 5], "hundr": 0, "thousand": 0, "million": 0, "typic": 0, "some": [0, 2, 4], "archiv": 0, "collect": 0, "mani": [0, 2, 6], "repetit": 0, "element": [0, 3, 5], "make": [0, 1], "difficult": 0, "fuzzy_search": [0, 7], "submodul": [0, 7], "fuzzy_config": [], "modul": [0, 7], "fuzzy_context_search": [], "fuzzycontextsearch": [1, 5], "fuzzy_match": [], "candid": [1, 2, 5], "phrasematch": [1, 2, 5], "phrasematchincontext": [1, 2, 5], "adjust_match_end_offset": [1, 2], "adjust_match_offset": [1, 2], "adjust_match_start_offset": [1, 2], "calculate_end_shift": [1, 2], "map_str": [1, 2], "phrase_match_from_json": [1, 2], "validate_match_prop": [1, 2], "fuzzy_pattern": [1, 7], "context_before_pattern": [1, 3], "context_then_pattern": [1, 3], "escape_str": [1, 3], "get_context_pattern": [1, 3], "get_search_pattern": [1, 3], "list_context_pattern_typ": [1, 3], "list_pattern_definit": [1, 3], "list_pattern_nam": [1, 3], "make_search_context_pattern": [1, 3], "pattern_before_context": [1, 3], "pattern_comma_then_context": [1, 3], "fuzzy_phras": [], "is_valid_label": [1, 4], "fuzzy_phrase_model": [], "phrasemodel": [1, 2, 3, 4, 5], "as_phrase_object": [1, 4], "is_phrase_dict": [1, 4], "fuzzy_phrase_search": [], "fuzzyphrasesearch": [1, 5], "skipmatch": [1, 2, 5], "add_exact_match_scor": [1, 2], "candidates_to_match": [1, 2], "filter_matches_by_overlap": [1, 2], "filter_overlapping_phrase_candid": [1, 2], "filter_skipgram_threshold": [1, 2], "get_exact_match_rang": [1, 2], "get_known_word_offset": [1, 2], "get_skipmatch_candid": [1, 2], "get_skipmatch_phrase_candid": [1, 2], "get_skipset_overlap": [1, 2], "get_text_dict": [1, 5], "index_known_word_offset": [1, 2], "search_exact": [1, 2], "search_exact_phras": [1, 2], "search_exact_phrases_with_word_boundari": [1, 2], "search_exact_phrases_without_word_boundari": [1, 2], "step_tim": [1, 5], "fuzzysearch": [0, 1, 5, 7], "create_term_match": [0, 1, 7], "fuzzy_str": [], "skipgram": [1, 2, 4, 5, 6], "get_non_word_prefix": [1, 6], "get_non_word_suffix": [1, 6], "insert_skip": [1, 6], "make_ngram": [1, 6, 7], "score_char_overlap": [1, 6, 7], "score_char_overlap_ratio": [1, 6, 7], "score_levenshtein_dist": [1, 6, 7], "score_levenshtein_similarity_ratio": [1, 6], "score_ngram_overlap": [1, 2, 6, 7], "score_ngram_overlap_ratio": [1, 6, 7], "strip_prefix": [1, 6], "strip_suffix": [1, 6, 7], "text2skipgram": [1, 6], "fuzzy_templ": [1, 7], "fuzzytempl": [1, 3, 5], "fuzzytemplateel": [1, 3, 5], "fuzzytemplategroupel": [1, 3, 5], "fuzzytemplatelabelel": [1, 3], "generate_group_from_json": [1, 3], "generate_label_from_json": [1, 3], "validate_element_properti": [1, 3], "fuzzy_template_search": [], "fuzzytemplatesearch": [1, 5], "templatematch": [1, 5], "find_next_element_end_index": [1, 5], "find_next_element_start_index": [1, 5], "find_next_group_match_sequ": [1, 5], "find_next_ordered_group_match_sequ": [1, 5], "find_next_unordered_group_match_sequ": [1, 5], "get_phrase_match_list_label": [1, 5], "get_sequence_label_element_match": [1, 5], "has_required_match": [1, 5], "initialize_sequ": [1, 5], "share_label": [1, 5], "similar": [0, 2, 6, 7], "index": [0, 1, 4, 5, 6], "page": 0, "class": [1, 2, 3, 4, 5, 6, 10], "config": [1, 4, 7], "option": [1, 2, 3, 4, 5, 6, 8], "dict": [1, 2, 3, 4, 5, 6], "none": [1, 2, 3, 4, 5, 6, 8, 10], "base": [1, 2, 3, 4, 5, 6, 10], "context_s": 5, "int": [1, 2, 3, 4, 5, 6], "add_match_context": [1, 5], "union": [1, 2, 3, 4, 5, 6], "str": [1, 2, 3, 4, 5, 6, 8], "prefix_s": [2, 5], "suffix_s": [2, 5], "add": [2, 4, 5, 6], "context": [2, 5], "given": [1, 2, 3, 4, 5, 6], "its": [2, 4, 5], "correspond": [2, 3, 5], "document": 5, "paramet": [1, 2, 3, 4, 5, 6], "object": [1, 2, 3, 4, 5, 6], "wa": [2, 5], "taken": 5, "from": [1, 2, 3, 4, 5, 6, 8], "size": [5, 6], "pre": 5, "suffix": [5, 6], "window": [5, 6], "prefix": [5, 6], "return": [1, 2, 3, 4, 5, 6], "type": [1, 2, 3, 4, 5, 6], "configure_context": [1, 5], "configur": [1, 5, 6], "searcher": [1, 7], "dictionari": [2, 3, 4, 5, 8], "overrid": 5, "default": [1, 2, 3, 5], "find_match": [1, 5], "use_word_boundari": [1, 2, 5], "bool": [1, 2, 3, 4, 5, 6], "allow_overlapping_match": 5, "true": [1, 2, 3, 4, 5, 6], "include_vari": [2, 4, 5], "filter_distractor": 5, "skip_exact_match": 5, "fuzzi": [2, 3, 5], "regist": [3, 4, 5], "around": 5, "string": [1, 2, 3, 4, 5, 7], "thi": [2, 3, 4, 5], "extend": 5, "function": 5, "ad": [1, 4, 5, 6], "local": 5, "each": [1, 3, 4, 5], "properti": [2, 3, 4, 5, 6], "word": [2, 5, 6], "boundari": [2, 5], "determin": 5, "boolean": [2, 4, 5], "flag": [3, 5, 6], "whether": [1, 2, 3, 4, 5, 6], "overlap": [1, 2, 5, 6], "rang": 5, "includ": [2, 4, 5], "variant": [1, 2, 4, 5], "remov": [2, 4, 5], "better": [2, 5], "distractor": [4, 5], "skip": [1, 2, 5, 6], "exact": 5, "step": 5, "surround": 5, "find_matches_in_context": [1, 5], "match_in_context": 5, "matchincontext": 5, "other": [2, 4, 5], "adjust": [2, 5], "closer": 5, "max_length_vari": [1, 2], "1": [1, 2, 5], "ignorecas": [1, 2, 4, 5, 6], "fals": [1, 2, 3, 4, 5, 6], "add_skip_match": [1, 2], "between": [1, 2, 3, 5, 6], "ot": 2, "get_match_start_offset": [1, 2], "calcul": [2, 6], "start": [1, 2, 4, 5], "offset": [2, 4, 5, 6], "get_match_str": [1, 2], "which": [1, 2, 3, 4, 6], "deriv": 2, "get_skip_count_overlap": [1, 2], "float": [1, 2, 4, 5], "deviat": 2, "inf": 2, "0": [1, 2, 5], "get_skip_set_overlap": [1, 2], "set": [2, 4, 5, 6, 10], "is_match": [1, 2], "skipgram_threshold": 2, "check": [2, 3, 4, 5, 6], "like": [2, 5], "threshold": [1, 2], "how": [2, 6], "have": [2, 3, 4, 5], "remove_first_skip": [1, 2], "first": [2, 5, 6], "updat": [1, 2, 6], "count": [1, 2, 6], "same_candid": [1, 2], "same": [1, 2, 4], "end": [2, 4, 5, 6], "anoth": 2, "shift_start_skip": [1, 2], "later": 2, "skip_match_length": [1, 2], "differ": 2, "match_phras": 2, "match_vari": 2, "match_str": 2, "match_offset": 2, "text_id": 2, "match_scor": 2, "match_label": 2, "match_id": 2, "add_scor": [1, 2], "skipgram_overlap": 2, "comput": 2, "score": [1, 2, 6], "as_web_anno": [1, 2], "turn": [2, 5, 6], "w3c": 2, "web": 2, "annot": [1, 2, 6], "represent": [2, 4], "has_label": [1, 2, 3, 4, 6], "label": [2, 3, 4, 5, 6], "json": [1, 2, 3, 4, 8], "label_list": [1, 2], "indic": [2, 3, 4, 5, 6], "two": [2, 5, 6], "sourc": 2, "score_character_overlap": [1, 2], "charact": [1, 2, 5, 6], "phrase_str": [2, 4], "proport": [2, 6], "score_levenshtein_similar": [1, 2], "levenshtein": [1, 2, 6], "ngram": [1, 2, 6], "context_start": 2, "context_end": 2, "20": [2, 5], "candidate_str": 2, "end_offset": [2, 6], "punctuat": 2, "treat": 2, "requir": [2, 3, 5], "too": 2, "big": 2, "candidate_start_offset": 2, "candidate_end_offset": 2, "_": 2, "phrase_end": 2, "match_end": 2, "text_suffix": 2, "affix_str": 2, "whitespace_onli": 2, "affix": 2, "char": 2, "w": 2, "non": [2, 6], "whitespac": 2, "": [2, 3, 4, 5], "onli": [2, 3, 5], "also": 2, "match_json": 2, "valid": [2, 3, 4], "name": [3, 4], "pattern_definit": 3, "context_str": 3, "max_dist": [1, 3], "10": [1, 3], "context_typ": 3, "pattern_typ": 3, "name_onli": 3, "pattern_nam": 3, "context_pattern": 3, "ngram_siz": [1, 2, 4, 5, 6], "2": [1, 4, 5, 6], "skip_siz": [1, 2, 4, 5, 6], "early_threshold": 4, "3": [1, 4], "late_threshold": 4, "within_range_threshold": 4, "add_max_offset": [], "max_offset": [], "maximum": [1, 2, 3, 4], "add_metadata": [1, 4], "metadata_dict": 4, "kei": 4, "valu": [4, 5], "pair": 4, "metadata": [4, 6], "label_str": 4, "belong": 4, "least": [3, 4, 5], "one": [3, 4, 5], "model": [2, 3, 4, 5], "part": [3, 4], "has_skipgram": [1, 4], "For": [4, 6], "an": [3, 4, 5, 6], "A": [4, 5], "is_early_skipgram": [1, 4], "appear": 4, "earli": 4, "set_label": [1, 4], "must": [3, 4], "can": [3, 4, 5], "singl": [3, 4, 5], "skipgram_offset": [1, 4], "skipgram_str": [4, 6], "within_rang": [1, 4], "skipgram1": 4, "skipgram2": 4, "test": [4, 5, 7], "either": [2, 4, 5], "phrase_label": 4, "custom": 4, "add_custom": [1, 4], "entri": 4, "param": 4, "arrai": 4, "addit": 4, "add_distractor": [1, 4], "distractor_phras": 4, "main_phras": 4, "main": 4, "add_new_phras": 4, "If": 4, "input": [1, 4], "unknown": [3, 4], "should": [1, 2, 3, 4], "add_label": [1, 4], "group": [3, 4, 5], "under": 4, "add_model": [1, 4], "entir": 4, "add_phras": [1, 4], "add_vari": [1, 4], "variant_phras": 4, "get": [1, 4], "custom_properti": 4, "get_label": [1, 4], "get_phras": [1, 4], "all": [2, 3, 4, 5, 6], "get_phrases_by_max_length": [1, 4], "max_length": 4, "gener": [1, 3, 4, 6], "longer": 4, "than": 4, "yield": 4, "get_vari": [1, 4], "specif": 4, "when": [2, 4], "has_custom": [1, 4], "has_phras": [1, 4], "phrase_model": [1, 2, 3, 5, 7], "index_phrase_word": [], "individu": 5, "look": [], "up": [5, 10], "routin": [], "is_label": [1, 4], "known": [4, 5], "respresent": 4, "remove_custom": [1, 4], "remove_distractor": [1, 4], "connect": 4, "more": 4, "distractors_of_phras": 4, "remove_label": [1, 4], "remove_phras": [1, 4], "remove_phrase_word": [], "those": 4, "well": 4, "keyphras": 4, "remove_vari": [1, 4], "variants_of_phras": 4, "validate_entry_phras": [], "variant_of": [1, 4], "doesn": [4, 5], "t": [1, 4, 5, 6], "phrase_dict": 4, "filter_matches_by_distractor": [1, 5], "filter_matches_by_threshold": [1, 5], "find_candid": [1, 5, 7], "known_word_offset": [], "find_exact_match": [1, 5], "debug": [2, 5], "By": [1, 5], "pass": 5, "conduct": 5, "occurr": [1, 5], "speed": 5, "show": [2, 5], "inform": [2, 5], "find_skipgram_match": [1, 5], "index_distractor": [1, 5], "filter": [1, 2, 5], "out": 5, "incorrect": 5, "index_phrase_model": [1, 5], "search": 1, "index_phras": [1, 5], "index_vari": [1, 5], "filtered_match": 2, "phrase_candid": 2, "skip_match": [1, 5, 7], "skip_threshold": 2, "meet": 2, "exact_match": [1, 7], "match_rang": 2, "text_doc": 2, "ignor": [2, 5], "gram": [1, 2, 5, 6], "against": [1, 2, 5], "fraction": 2, "id": [5, 6], "so": 5, "long": 5, "goe": 5, "refer": 5, "instead": 5, "copi": 5, "char_match_threshold": 1, "5": [1, 5], "ngram_threshold": 1, "levenshtein_threshold": 1, "disable_strip_suffix": [1, 7], "enable_strip_suffix": [1, 7], "filter_candid": [1, 7], "filter_char_match_candid": [1, 7], "match_term": 1, "filter_levenshtein_candid": [1, 7], "filter_ngram_candid": [1, 7], "initi": 1, "term": [1, 6, 8], "them": 1, "distanc": [1, 3, 6], "find_start_candid": [1, 7], "find_term_match": [1, 7], "n": [1, 6], "rank_candid": [1, 7], "term1": [1, 6], "term2": [1, 6], "s1": 1, "s2": 1, "score_levenshtein_distance_ratio": [1, 7], "re_match": 1, "skipgram_length": 6, "skipgram_combin": 6, "number": [1, 6], "token": [0, 1, 2, 4, 5, 7], "second": [5, 6], "strip": 6, "integ": 6, "iter": [1, 6], "tupl": [1, 6], "skip_gram": 6, "template_json": 3, "ignore_unknown": 3, "order": [3, 5], "get_el": [1, 3], "element_label": 3, "get_elements_by_cardin": [1, 3], "cardin": 3, "templat": [3, 5], "multi": 3, "get_label_phras": [1, 3], "get_labels_by_cardin": [1, 3], "get_required_el": [1, 3], "get_required_label": [1, 3], "has_group": [1, 3], "parse_group_el": [1, 3], "group_info": 3, "pars": 3, "parse_label_el": [1, 3], "label_info": 3, "register_templ": [1, 3], "element_typ": 3, "next_label": 3, "next_distance_max": 3, "variabl": 3, "element_info": 3, "group_el": 3, "occur": [1, 3], "onc": 3, "multipl": [3, 5], "time": [3, 5], "what": 3, "next": [3, 5], "filter_phrase_match": [1, 5], "phrase_match": [1, 5, 7], "common": 5, "find_template_match": [1, 5], "fit": 5, "method": [5, 10], "There": 5, "search_text": [1, 5], "result": 5, "togeth": 5, "identifi": 5, "set_templ": [1, 5], "new": 5, "template_sequ": 5, "template_el": 5, "element_start_index": 5, "point": 5, "stop": 5, "template_start_index": 5, "process": 5, "template_group": 5, "sequenc": 5, "unord": 5, "start_index": 5, "end_index": 5, "object1": 5, "object2": 5, "share": 5, "compar": 5, "content": 7, "setup": [7, 10], "test_fuzzy_context_search": [7, 10], "testfuzzycontextsearch": [7, 10], "test_fuzzy_context_searcher_can_add_context": [7, 10], "test_fuzzy_context_searcher_can_search_context": [7, 10], "test_fuzzy_context_searcher_can_set_context_s": [7, 10], "test_fuzzy_context_searcher_finds_match_with_context": [7, 10], "test_fuzzy_match": [], "testfuzzymatch": [7, 10], "test_adjust_boundaries_finds_word_boundari": [7, 10], "test_adjust_boundaries_removes_surrounding_whitespac": [7, 10], "test_adjust_end": [7, 10], "test_adjust_end_does_not_shift_when_end_middle_of_next_word": [7, 10], "test_adjust_end_shifts_back_one_when_ending_with_whitespac": [7, 10], "test_adjust_end_shifts_back_one_when_phrase_ends_with_whitespac": [7, 10], "test_adjust_end_shifts_back_two_when_ending_with_whitespace_and_char": [7, 10], "test_adjust_end_shifts_to_end_of_next_word": [7, 10], "test_adjust_start": [7, 10], "test_adjust_start_does_not_shift_to_third_previous_charact": [7, 10], "test_adjust_start_returns_when_in_middle_of_word": [7, 10], "test_adjust_start_shifts_to_next_charact": [7, 10], "test_adjust_start_shifts_to_previous_charact": [7, 10], "test_adjust_start_shifts_to_second_previous_charact": [7, 10], "test_map_string_maps_mixed_str": [7, 10], "test_map_string_maps_space_str": [7, 10], "test_map_string_maps_word_str": [7, 10], "testmatchannot": [7, 10], "test_match_as_web_anno_has_label": [7, 10], "test_match_as_web_anno_has_multiple_bodi": [7, 10], "test_match_as_web_anno_skips_correction_with_exact_match": [7, 10], "test_match_in_context_as_web_anno_has_multiple_selector": [7, 10], "test_match_in_context_as_web_anno_has_text_quote_selector": [7, 10], "testmatchincontext": [7, 10], "test_context_contains_text_from_doc": [7, 10], "test_context_is_adjust": [7, 10], "test_make_match_in_context": [7, 10], "test_fuzzy_phras": [], "test_skipgrams_have_correct_length": [7, 10], "test_text2skipgrams_accepts_positive_ngram_s": [7, 10], "test_text2skipgrams_rejects_negative_ngram_s": [7, 10], "test_text2skipgrams_rejects_negative_skip_s": [7, 10], "testfuzzyphras": [7, 10], "test_fuzzy_phrase_accepts_phrase_as_dict": [7, 10], "test_fuzzy_phrase_accepts_phrase_as_str": [7, 10], "test_fuzzy_phrase_accepts_phrase_with_valid_list_of_strings_label": [7, 10], "test_fuzzy_phrase_accepts_phrase_with_valid_string_label": [7, 10], "test_fuzzy_phrase_can_set_max_end": [], "test_fuzzy_phrase_can_set_max_offset": [], "test_fuzzy_phrase_cannot_set_negative_max_offset": [], "test_fuzzy_phrase_rejects_phrase_with_invalid_label": [7, 10], "test_fuzzy_phrase_model": [], "test_can_add_custom_key_value_pairs_to_phras": [7, 10], "test_can_add_distractor": [7, 10], "test_can_add_label_as_list_to_phras": [7, 10], "test_can_add_label_to_phras": [7, 10], "test_can_add_variant_phras": [7, 10], "test_can_configure_ngram_s": [7, 10], "test_can_get_json_represent": [7, 10], "test_making_empty_phrase_model": [7, 10], "test_making_phrase_model_with_list_of_keyword_str": [7, 10], "test_making_phrase_model_with_list_of_phrase_dictionari": [7, 10], "test_phrase_model_can_add_phras": [7, 10], "test_phrase_model_can_remove_phras": [7, 10], "test_phrase_model_indexes_phrase_word": [7, 10], "test_fuzzy_phrase_search": [], "testcandid": [7, 10], "test_candidate_detects_no_match": [7, 10], "test_candidate_detects_no_match_with_no_skip_match": [7, 10], "test_candidate_has_skipgram_overlap": [7, 10], "testfuzzyphrasesearch": [7, 10], "test_can_add_phrases_as_phrase_object": [7, 10], "test_can_add_phrases_as_str": [7, 10], "test_can_filter_skipgram_threshold": [7, 10], "test_can_generate_skip_match": [7, 10], "test_can_get_candid": [7, 10], "test_can_make_default_phrase_search": [7, 10], "test_finds_multiple_candid": [7, 10], "test_searcher_allows_length_vari": [7, 10], "test_searcher_allows_length_variance_2": [7, 10], "test_searcher_can_match_distractor": [7, 10], "test_searcher_can_match_vari": [7, 10], "test_searcher_can_register_distractor": [7, 10], "test_searcher_can_register_vari": [7, 10], "test_searcher_can_toggle_distractor": [7, 10], "test_searcher_can_toggle_vari": [7, 10], "test_searcher_finds_correct_start": [7, 10], "test_searcher_finds_near_match": [7, 10], "test_searcher_finds_repeat_phrases_as_multiple_match": [7, 10], "test_searcher_handles_ignorecas": [7, 10], "test_searcher_is_case_sensit": [7, 10], "test_searcher_uses_word_boundari": [7, 10], "testfuzzysearchexactmatch": [7, 10], "test_fuzzy_search_can_search_exact_match": [7, 10], "test_fuzzy_search_can_search_exact_match_with_special_charact": [7, 10], "test_fuzzy_search_can_search_exact_match_with_word_boundari": [7, 10], "test_fuzzy_search_can_search_exact_match_without_word_boundari": [7, 10], "test_text_split": [7, 10], "testsearcherrealdata": [7, 10], "test_fuzzy_search_text1_finds_attend": [7, 10], "test_fuzzy_search_text1_finds_d": [7, 10], "test_fuzzy_search_text1_finds_four_match": [7, 10], "test_fuzzy_search_text1_finds_fridai": [7, 10], "test_fuzzy_search_text1_finds_presid": [7, 10], "test_fuzzy_search_text2_finds_attend": [7, 10], "test_fuzzy_search_text2_finds_d": [7, 10], "test_fuzzy_search_text2_finds_four_match": [7, 10], "test_fuzzy_search_text2_finds_fridai": [7, 10], "test_fuzzy_search_text2_finds_presid": [7, 10], "testsearcherrealdata2": [7, 10], "test_searcher_allows_length_variance_3": [7, 10], "test_searcher_find_no_overlapping_vari": [7, 10], "test_searcher_finds_dontfangen": [7, 10], "test_searcher_finds_long_open": [7, 10], "testskipmatch": [7, 10], "test_skip_matches_registers_match": [7, 10], "test_fuzzy_str": [], "test_make_ngrams_accepts_positive_integ": [7, 10], "test_make_ngrams_handles_size_one_correctli": [7, 10], "test_make_ngrams_handles_size_two_correctli": [7, 10], "test_make_ngrams_rejects_integer_larger_than_text_length": [7, 10], "test_make_ngrams_rejects_negative_s": [7, 10], "test_make_ngrams_rejects_non_integer_s": [7, 10], "test_make_ngrams_rejects_non_string_text": [7, 10], "test_score_char_overlap_with_self_is_len_of_self": [7, 10], "test_score_char_overlap_with_smaller_word_is_smaller_than_len_of_self": [7, 10], "test_score_levenshtein_similarity_with_self_is_len_of_self": [7, 10], "test_score_ngram_overlap_is_num_ngrams_for_self_comparison": [7, 10], "test_score_ngram_overlap_is_zero_for_comparison_with_empti": [7, 10], "test_fuzzy_templ": [], "testfuzzytempl": [7, 10], "test_template_can_get_phrase_by_label": [7, 10], "test_template_can_ignore_element_with_unknown_label": [7, 10], "test_template_can_register_group_el": [7, 10], "test_template_can_return_required_el": [7, 10], "test_template_cannot_register_element_with_unknown_label": [7, 10], "test_template_gener": [7, 10], "test_template_get_phrase_by_label_returns_correct_phras": [7, 10], "test_template_get_phrase_by_label_returns_phrase_object": [7, 10], "test_template_register_simple_el": [7, 10], "test_template_register_simple_element_as_multi_if_no_cardin": [7, 10], "test_template_register_simple_element_with_list_label": [7, 10], "test_template_returns_all_required_element_label": [7, 10], "test_template_returns_all_required_el": [7, 10], "testfuzzytemplateel": [7, 10], "test_template_accepts_label_and_cardin": [7, 10], "test_template_accepts_label_onli": [7, 10], "test_template_rejects_invalid_cardinality_valu": [7, 10], "testfuzzytemplategroup": [7, 10], "test_template_group_accepts_label_and_ord": [7, 10], "test_template_group_accepts_label_onli": [7, 10], "testfuzzytemplatewithrealdata": [7, 10], "test_template_can_read_real_data": [7, 10], "test_fuzzy_template_search": [], "testfuzzytemplatesearch": [7, 10], "test_add_template_sets_phrase_model": [7, 10], "test_can_add_template_at_init": [7, 10], "test_can_add_template_lat": [7, 10], "test_can_make_search": [7, 10], "test_can_search_text": [7, 10], "test_configure_ngram_s": [7, 10], "test_search_text_returns_template_match": [7, 10], "test_throws_error_for_mismatch_ngram_s": [7, 10], "testfuzzytemplatesearcherwithrealdata": [7, 10], "prep_test": [7, 10], "test_search_text_finds_template_with_auction_test_1": [7, 10], "test_search_text_finds_template_with_auction_test_2": [7, 10], "test_search_text_finds_template_with_auction_test_3": [7, 10], "test_search_text_finds_template_with_auction_test_4": [7, 10], "methodnam": 10, "runtest": 10, "testcas": 10, "hook": 10, "fixtur": 10, "befor": [1, 6, 10], "exercis": 10, "test_nam": 10, "skipcooccurr": [0, 1, 7], "skipgramsimilar": [0, 1, 7], "vocabulari": [1, 5, 7], "get_begin_sim": [0, 1, 7], "get_end_sim": [0, 1, 7], "get_min_length": [0, 1, 7], "get_skip_cooc": [0, 1, 7], "vector_length": [0, 1, 7], "sentenc": 1, "calculate_skip_cooccurr": [1, 7], "frequenc": 1, "co": 1, "itself": 1, "get_term_cooc": [1, 7], "ngram_length": 1, "skip_length": 1, "max_length_diff": 1, "index_term": [1, 7], "reset_index": [1, 6], "cumul": 1, "everytim": 1, "call": 1, "thei": 1, "reset": [1, 6], "keep": 1, "exist": 1, "rank_similar": [1, 7], "top_n": 1, "score_cutoff": 1, "rank": 1, "cosin": 1, "highest": 1, "minimum": 1, "after": 1, "cutoff": 1, "add_term": [1, 6], "empti": 6, "id2term": [1, 6], "term_id": 6, "term2id": [1, 6], "phrase1": 1, "phrase2": 1, "begin_length": 1, "end_length": 1, "seq_id": 1, "skipgram_freq": 1, "make_search": [0, 1, 7], "phrase_list": 5, "test_searcher_accepts_phrases_on_init": [7, 10], "testfuzzysearchdistractor": [7, 10], "testfuzzysearchvari": [7, 10], "subpackag": [0, 7], "pattern": [0, 1, 7], "candidate_match": [1, 7], "has_token": [1, 4, 6], "context_search": [1, 7], "phrase_search": [1, 7], "template_search": [1, 7], "token_search": [1, 7, 10], "fuzzytokensearch": [1, 5], "find_skipgram_token_matches_for_token": [1, 5], "find_skipgram_token_matches_in_text": [1, 5], "find_tokenized_match": [], "index_token_skipgram": [1, 5], "matchtyp": [1, 5], "full": [1, 5], "partial_of_phrase_token": [1, 5], "partial_of_text_token": [1, 5], "partialphrasematch": [1, 5], "add_token": [1, 5], "tokenmatch": [1, 5], "get_best_text_phrase_token_map": [], "get_partial_phras": [1, 5], "get_text_str": [1, 5], "get_text_token": [1, 5], "get_token_skip_match_typ": [1, 5], "get_token_skipgram_match": [1, 5], "map_text_tokens_to_phrase_token": [1, 5], "customtoken": [1, 6], "doc": [1, 5, 6], "normal": [1, 6], "origin": [1, 6], "regextoken": [1, 6], "l": [1, 6], "lower": [1, 6], "update_token": [1, 6], "attribut": 2, "level": [2, 5], "text_token": [5, 10], "partial_match": 5, "token_match": 5, "partial": 5, "instanc": [], "enum": 5, "enumer": 5, "max_char_gap": 5, "max_token_gap": 5, "phrase_token": 5, "match_typ": 5, "text_token_str": 5, "text_token_num_skip": 5, "phrase_token_match": 5, "text_token_skip": 5, "tokenizer_func": 6, "callabl": 6, "kwarg": 6, "doc_id": 6, "include_boundary_token": 6, "split_pattern": 6, "b": 6, "char_index": 6, "normalised_str": 6, "doc_text": 6, "new_normalis": 6, "test_match_candid": 7, "test_match_phras": 7, "test_match_skip": 7, "test_pattern_templ": 7, "test_phrase_phras": 7, "testphrasetoken": [7, 10], "test_phrase_can_take_token": [7, 10], "test_phrase_with_tokens_has_token_index": [7, 10], "test_phrase_with_tokens_has_token_multi_index": [7, 10], "test_phrase_phrase_model": 7, "testphrasemodeltoken": [7, 10], "test_can_add_tokenizer_at_init": [7, 10], "test_search_context_search": 7, "test_search_phrase_search": 7, "test_search_search": 7, "testsearch": [7, 10], "test_searcher_has_default_config": [7, 10], "test_searcher_has_default_token": [7, 10], "test_searcher_indexes_phrase_skipgram_phras": [7, 10], "test_searcher_indexes_phrase_skipgram": [7, 10], "test_searcher_indexes_phrase_token": [7, 10], "test_searcher_indexes_phras": [7, 10], "test_searcher_passes_tokenizer_to_phrase_model": [7, 10], "test_search_template_search": 7, "test_search_token_search": 7, "testpartialphrasematch": [7, 10], "test_making_partial_match_can_pop": [7, 10], "test_making_partial_match_extends_phrase_token": [7, 10], "test_making_partial_match_extends_text_length": [7, 10], "test_making_partial_match_extends_text_token": [7, 10], "test_making_partial_match_picks_best_phrase_token_opt": [7, 10], "testtokensearch": [7, 10], "test_token_searcher_has_default_token": [7, 10], "test_token_searcher_has_token_skipgram_index": [7, 10], "testtokensearchermatchtyp": [7, 10], "test_get_match_type_finds_full_match": [7, 10], "test_get_match_type_finds_multi_text_token_match": [7, 10], "test_get_match_type_finds_partial_phrase_token_match": [7, 10], "test_get_match_type_finds_partial_text_token_match": [7, 10], "test_get_match_type_finds_same_text_token_match_for_multi_phrase_token": [7, 10], "test_token_searcher_finds_multiple_match": [7, 10], "test_token_searcher_finds_partial_phrase_token_match": [7, 10], "get_token_match_typ": [7, 10], "test_tokenization_str": 7, "test_tokenization_token": 7, "testtoken": [7, 10], "test_tokenizer_lower_affects_normalised_str": [7, 10], "test_tokenizer_token_can_check_has_label": [7, 10], "test_tokenizer_token_can_have_label_set": [7, 10], "test_tokenizer_token_can_have_label_str": [7, 10], "test_tokenizer_token_has_normalised_str": [7, 10], "test_tokenizer_update_affects_normalised_str": [7, 10], "test_tokenizer_update_returns_new_token": [7, 10], "test_tokenizer_can_add_boundari": [7, 10], "test_tokenizer_defaults_to_no_boundary_token": [7, 10], "test_tokenizer_ignorecase_keeps_original_case_in_str": [7, 10], "test_tokenizer_ignorecase_lowercases_normalised_str": [7, 10], "test_tokenizer_returns_a_document_object": [7, 10], "test_tokenizer_tracks_char_index": [7, 10], "add_annot": [1, 6], "tag": [1, 6], "tag_typ": 6, "remove_punctu": 6, "keywordlist": [0, 1, 7], "is_close_distance_keyword_pair": [0, 1, 7], "add_max_end_offset": [1, 4], "add_max_start_offset": [1, 4], "find_vocabulary_token_matches_for_token": [1, 5], "pop": [1, 5], "push": [1, 5], "get_tokenized_doc": [1, 5], "get_token": [1, 6], "has_term": [1, 6], "find_close_distance_keyword": [1, 7], "max_distance_ratio": 1, "todo": 1, "we": 1, "argument": 1, "find_closer_term": [1, 7], "close_term": 1, "iterate_candidate_pair": [1, 7], "keyword1": 1, "keyword2": 1, "max_length_differ": 1, "levenshtein_similar": 2, "max_end_offset": 4, "max_start_offset": 4, "known_word_start_offset": 5, "start_offset": [5, 6], "target": 5, "especi": 5, "cost": 5, "slightli": 5, "less": 5, "exhaust": 5, "token_str": 6, "resolution_phrase_model": 7, "read_republic_term_dict": [7, 8], "test_fuzzy_phrase_can_set_max_start_end": [7, 10], "test_fuzzy_phrase_can_set_max_start_offset": [7, 10], "test_fuzzy_phrase_can_set_metadata": [7, 10], "test_fuzzy_phrase_cannot_set_negative_max_start_offset": [7, 10], "test_searcher_accepts_tokenized_docu": [7, 10], "testfindmatch": [7, 10], "test_find_matches_accepts_text_dictionari": [7, 10], "test_find_matches_accepts_text_doc": [7, 10], "test_find_matches_accepts_text_str": [7, 10], "test_find_phrase_matches_filters_on_score_threshold": [7, 10], "test_find_phrase_matches_finds_best_option_per_text_rang": [7, 10], "test_making_partial_match_picks_best_phrase_opt": [7, 10], "test_making_candidate_phrases_can_detect_term_swap": [7, 10], "test_making_partial_match_discards_when_missing_phrase_token": [7, 10], "test_making_partial_match_does_not_duplicate_text_token": [7, 10], "testtokensearchervari": [7, 10], "test_searcher_can_match_phrase_vari": [7, 10], "testtokensearchervocabulari": [7, 10], "test_searcher_can_have_vocab": [7, 10], "test_searcher_can_match_tokens_via_vocab": [7, 10], "test_similar": 7, "testkeywordlist": [7, 10], "test_keyword_list_accepts_list_of_str": [7, 10], "test_keyword_list_does_not_accept_list_of_dict": [7, 10], "test_keyword_list_indexes_by_length": [7, 10], "test_keyword_list_indexes_multiple_occurrences_only_onc": [7, 10], "test_keyword_pairs_obey_length_restrict": [7, 10], "test_tokenization_vocabulari": 7, "testvocabulari": [7, 10], "test_vocabulary_can_be_case_insensit": [7, 10], "test_vocabulary_can_be_case_sensit": [7, 10], "test_vocabulary_can_be_initialised_empti": [7, 10], "test_vocabulary_can_be_initialised_with_token_list": [7, 10], "test_vocabulary_can_be_initialised_with_word_list": [7, 10], "test_vocabulary_can_check_that_token_is_includ": [7, 10], "test_vocabulary_can_check_that_word_is_includ": [7, 10], "test_vocabulary_represents_words_by_integ": [7, 10], "dict_fil": 8, "read": 8, "format": 8, "file": 8}, "objects": {"": [[1, 0, 0, "-", "fuzzy_search"], [8, 0, 0, "-", "resolution_phrase_model"], [10, 0, 0, "-", "test"]], "fuzzy_search": [[1, 0, 0, "-", "fuzzy_searcher"], [1, 3, 1, "", "make_searcher"], [2, 0, 0, "-", "match"], [3, 0, 0, "-", "pattern"], [4, 0, 0, "-", "phrase"], [5, 0, 0, "-", "search"], [1, 0, 0, "-", "similarity"], [6, 0, 0, "-", "tokenization"]], "fuzzy_search.fuzzy_searcher": [[1, 1, 1, "", "FuzzySearcher"], [1, 3, 1, "", "create_term_match"]], "fuzzy_search.fuzzy_searcher.FuzzySearcher": [[1, 2, 1, "", "disable_strip_suffix"], [1, 2, 1, "", "enable_strip_suffix"], [1, 2, 1, "", "filter_candidates"], [1, 2, 1, "", "filter_char_match_candidates"], [1, 2, 1, "", "filter_levenshtein_candidates"], [1, 2, 1, "", "filter_ngram_candidates"], [1, 2, 1, "", "find_candidates"], [1, 2, 1, "", "find_start_candidates"], [1, 2, 1, "", "find_term_matches"], [1, 2, 1, "", "make_ngrams"], [1, 2, 1, "", "rank_candidates"], [1, 2, 1, "", "score_char_overlap"], [1, 2, 1, "", "score_char_overlap_ratio"], [1, 2, 1, "", "score_levenshtein_distance"], [1, 2, 1, "", "score_levenshtein_distance_ratio"], [1, 2, 1, "", "score_ngram_overlap"], [1, 2, 1, "", "score_ngram_overlap_ratio"], [1, 2, 1, "", "strip_suffix"]], "fuzzy_search.match": [[2, 0, 0, "-", "candidate_match"], [2, 0, 0, "-", "exact_match"], [2, 0, 0, "-", "phrase_match"], [2, 0, 0, "-", "skip_match"]], "fuzzy_search.match.candidate_match": [[2, 1, 1, "", "Candidate"]], "fuzzy_search.match.candidate_match.Candidate": [[2, 2, 1, "", "add_skip_match"], [2, 2, 1, "", "get_match_start_offset"], [2, 2, 1, "", "get_match_string"], [2, 2, 1, "", "get_skip_count_overlap"], [2, 2, 1, "", "get_skip_set_overlap"], [2, 2, 1, "", "is_match"], [2, 2, 1, "", "remove_first_skip"], [2, 2, 1, "", "same_candidate"], [2, 2, 1, "", "shift_start_skip"], [2, 2, 1, "", "skip_match_length"]], "fuzzy_search.match.exact_match": [[2, 3, 1, "", "add_exact_match_score"], [2, 3, 1, "", "get_exact_match_ranges"], [2, 3, 1, "", "get_known_word_offsets"], [2, 3, 1, "", "index_known_word_offsets"], [2, 3, 1, "", "search_exact"], [2, 3, 1, "", "search_exact_phrases"], [2, 3, 1, "", "search_exact_phrases_with_word_boundaries"], [2, 3, 1, "", "search_exact_phrases_without_word_boundaries"]], "fuzzy_search.match.phrase_match": [[2, 1, 1, "", "PhraseMatch"], [2, 1, 1, "", "PhraseMatchInContext"], [2, 3, 1, "", "adjust_match_end_offset"], [2, 3, 1, "", "adjust_match_offsets"], [2, 3, 1, "", "adjust_match_start_offset"], [2, 3, 1, "", "calculate_end_shift"], [2, 3, 1, "", "candidates_to_matches"], [2, 3, 1, "", "filter_matches_by_overlap"], [2, 3, 1, "", "map_string"], [2, 3, 1, "", "phrase_match_from_json"], [2, 3, 1, "", "validate_match_props"]], "fuzzy_search.match.phrase_match.PhraseMatch": [[2, 2, 1, "", "add_scores"], [2, 2, 1, "", "as_web_anno"], [2, 2, 1, "", "has_label"], [2, 2, 1, "", "json"], [2, 4, 1, "", "label_list"], [2, 2, 1, "", "overlaps"], [2, 2, 1, "", "score_character_overlap"], [2, 2, 1, "", "score_levenshtein_similarity"], [2, 2, 1, "", "score_ngram_overlap"]], "fuzzy_search.match.phrase_match.PhraseMatchInContext": [[2, 2, 1, "", "as_web_anno"], [2, 2, 1, "", "json"]], "fuzzy_search.match.skip_match": [[2, 1, 1, "", "SkipMatches"], [2, 3, 1, "", "filter_overlapping_phrase_candidates"], [2, 3, 1, "", "filter_skipgram_threshold"], [2, 3, 1, "", "get_skipmatch_candidates"], [2, 3, 1, "", "get_skipmatch_phrase_candidates"], [2, 3, 1, "", "get_skipset_overlap"]], "fuzzy_search.match.skip_match.SkipMatches": [[2, 2, 1, "", "add_skip_match"]], "fuzzy_search.pattern": [[3, 0, 0, "-", "fuzzy_patterns"], [3, 0, 0, "-", "fuzzy_template"]], "fuzzy_search.pattern.fuzzy_patterns": [[3, 3, 1, "", "context_before_pattern"], [3, 3, 1, "", "context_then_pattern"], [3, 3, 1, "", "escape_string"], [3, 3, 1, "", "get_context_patterns"], [3, 3, 1, "", "get_search_patterns"], [3, 3, 1, "", "list_context_pattern_types"], [3, 3, 1, "", "list_pattern_definitions"], [3, 3, 1, "", "list_pattern_names"], [3, 3, 1, "", "make_search_context_patterns"], [3, 3, 1, "", "pattern_before_context"], [3, 3, 1, "", "pattern_comma_then_context"]], "fuzzy_search.pattern.fuzzy_template": [[3, 1, 1, "", "FuzzyTemplate"], [3, 1, 1, "", "FuzzyTemplateElement"], [3, 1, 1, "", "FuzzyTemplateGroupElement"], [3, 1, 1, "", "FuzzyTemplateLabelElement"], [3, 3, 1, "", "generate_group_from_json"], [3, 3, 1, "", "generate_label_from_json"], [3, 3, 1, "", "validate_element_properties"]], "fuzzy_search.pattern.fuzzy_template.FuzzyTemplate": [[3, 2, 1, "", "get_element"], [3, 2, 1, "", "get_elements_by_cardinality"], [3, 2, 1, "", "get_label_phrases"], [3, 2, 1, "", "get_labels_by_cardinality"], [3, 2, 1, "", "get_required_elements"], [3, 2, 1, "", "get_required_labels"], [3, 2, 1, "", "has_group"], [3, 2, 1, "", "has_label"], [3, 2, 1, "", "parse_group_element"], [3, 2, 1, "", "parse_label_element"], [3, 2, 1, "", "register_template"]], "fuzzy_search.phrase": [[4, 0, 0, "-", "phrase"], [4, 0, 0, "-", "phrase_model"]], "fuzzy_search.phrase.phrase": [[4, 1, 1, "", "Phrase"], [4, 3, 1, "", "is_valid_label"]], "fuzzy_search.phrase.phrase.Phrase": [[4, 2, 1, "", "add_max_end_offset"], [4, 2, 1, "", "add_max_start_offset"], [4, 2, 1, "", "add_metadata"], [4, 2, 1, "", "has_label"], [4, 2, 1, "", "has_skipgram"], [4, 2, 1, "", "is_early_skipgram"], [4, 2, 1, "", "set_label"], [4, 2, 1, "", "skipgram_offsets"], [4, 2, 1, "", "within_range"]], "fuzzy_search.phrase.phrase_model": [[4, 1, 1, "", "PhraseModel"], [4, 3, 1, "", "as_phrase_object"], [4, 3, 1, "", "is_phrase_dict"]], "fuzzy_search.phrase.phrase_model.PhraseModel": [[4, 2, 1, "", "add_custom"], [4, 2, 1, "", "add_distractor"], [4, 2, 1, "", "add_distractors"], [4, 2, 1, "", "add_labels"], [4, 2, 1, "", "add_model"], [4, 2, 1, "", "add_phrase"], [4, 2, 1, "", "add_phrases"], [4, 2, 1, "", "add_variant"], [4, 2, 1, "", "add_variants"], [4, 2, 1, "", "get"], [4, 2, 1, "", "get_labels"], [4, 2, 1, "", "get_phrase"], [4, 2, 1, "", "get_phrases"], [4, 2, 1, "", "get_phrases_by_max_length"], [4, 2, 1, "", "get_variants"], [4, 2, 1, "", "has_custom"], [4, 2, 1, "", "has_label"], [4, 2, 1, "", "has_phrase"], [4, 2, 1, "", "has_token"], [4, 2, 1, "", "is_label"], [4, 4, 1, "", "json"], [4, 2, 1, "", "remove_custom"], [4, 2, 1, "", "remove_distractor"], [4, 2, 1, "", "remove_distractors"], [4, 2, 1, "", "remove_labels"], [4, 2, 1, "", "remove_phrase"], [4, 2, 1, "", "remove_phrases"], [4, 2, 1, "", "remove_variant"], [4, 2, 1, "", "remove_variants"], [4, 2, 1, "", "variant_of"], [4, 2, 1, "", "variants"]], "fuzzy_search.search": [[5, 0, 0, "-", "config"], [5, 0, 0, "-", "context_searcher"], [5, 0, 0, "-", "phrase_searcher"], [5, 0, 0, "-", "searcher"], [5, 0, 0, "-", "template_searcher"], [5, 0, 0, "-", "token_searcher"]], "fuzzy_search.search.context_searcher": [[5, 1, 1, "", "FuzzyContextSearcher"]], "fuzzy_search.search.context_searcher.FuzzyContextSearcher": [[5, 2, 1, "", "add_match_context"], [5, 2, 1, "", "configure_context"], [5, 2, 1, "", "find_matches"], [5, 2, 1, "", "find_matches_in_context"]], "fuzzy_search.search.phrase_searcher": [[5, 1, 1, "", "FuzzyPhraseSearcher"], [5, 3, 1, "", "get_text_dict"], [5, 3, 1, "", "step_timer"]], "fuzzy_search.search.phrase_searcher.FuzzyPhraseSearcher": [[5, 2, 1, "", "filter_matches_by_distractors"], [5, 2, 1, "", "filter_matches_by_threshold"], [5, 2, 1, "", "find_candidates"], [5, 2, 1, "", "find_exact_matches"], [5, 2, 1, "", "find_matches"]], "fuzzy_search.search.searcher": [[5, 1, 1, "", "FuzzySearcher"]], "fuzzy_search.search.searcher.FuzzySearcher": [[5, 2, 1, "", "configure"], [5, 2, 1, "", "find_skipgram_matches"], [5, 2, 1, "", "index_distractors"], [5, 2, 1, "", "index_phrase_model"], [5, 2, 1, "", "index_phrases"], [5, 2, 1, "", "index_variants"]], "fuzzy_search.search.template_searcher": [[5, 1, 1, "", "FuzzyTemplateSearcher"], [5, 1, 1, "", "TemplateMatch"], [5, 3, 1, "", "find_next_element_end_index"], [5, 3, 1, "", "find_next_element_start_index"], [5, 3, 1, "", "find_next_group_match_sequence"], [5, 3, 1, "", "find_next_ordered_group_match_sequence"], [5, 3, 1, "", "find_next_unordered_group_match_sequence"], [5, 3, 1, "", "get_phrase_match_list_labels"], [5, 3, 1, "", "get_sequence_label_element_matches"], [5, 3, 1, "", "has_required_matches"], [5, 3, 1, "", "initialize_sequence"], [5, 3, 1, "", "share_label"]], "fuzzy_search.search.template_searcher.FuzzyTemplateSearcher": [[5, 2, 1, "", "filter_phrase_matches"], [5, 2, 1, "", "find_template_matches"], [5, 2, 1, "", "search_text"], [5, 2, 1, "", "set_template"]], "fuzzy_search.search.token_searcher": [[5, 1, 1, "", "FuzzyTokenSearcher"], [5, 1, 1, "", "MatchType"], [5, 1, 1, "", "PartialPhraseMatch"], [5, 1, 1, "", "TokenMatch"], [5, 3, 1, "", "get_partial_phrases"], [5, 3, 1, "", "get_text_string"], [5, 3, 1, "", "get_text_tokens"], [5, 3, 1, "", "get_token_skip_match_type"], [5, 3, 1, "", "get_token_skipgram_matches"], [5, 3, 1, "", "get_tokenized_doc"], [5, 3, 1, "", "map_text_tokens_to_phrase_tokens"]], "fuzzy_search.search.token_searcher.FuzzyTokenSearcher": [[5, 2, 1, "", "configure"], [5, 2, 1, "", "find_matches"], [5, 2, 1, "", "find_skipgram_token_matches_for_token"], [5, 2, 1, "", "find_skipgram_token_matches_in_text"], [5, 2, 1, "", "find_vocabulary_token_matches_for_token"], [5, 2, 1, "", "index_token_skipgrams"]], "fuzzy_search.search.token_searcher.MatchType": [[5, 5, 1, "", "FULL"], [5, 5, 1, "", "NONE"], [5, 5, 1, "", "PARTIAL_OF_PHRASE_TOKEN"], [5, 5, 1, "", "PARTIAL_OF_TEXT_TOKEN"]], "fuzzy_search.search.token_searcher.PartialPhraseMatch": [[5, 2, 1, "", "add_tokens"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "push"]], "fuzzy_search.similarity": [[1, 1, 1, "", "KeywordList"], [1, 1, 1, "", "SkipCooccurrence"], [1, 1, 1, "", "SkipgramSimilarity"], [1, 3, 1, "", "get_begin_sim"], [1, 3, 1, "", "get_end_sim"], [1, 3, 1, "", "get_min_length"], [1, 3, 1, "", "get_skip_coocs"], [1, 3, 1, "", "is_close_distance_keyword_pair"], [1, 3, 1, "", "vector_length"]], "fuzzy_search.similarity.KeywordList": [[1, 2, 1, "", "find_close_distance_keywords"], [1, 2, 1, "", "find_closer_terms"], [1, 2, 1, "", "iterate_candidate_pairs"]], "fuzzy_search.similarity.SkipCooccurrence": [[1, 2, 1, "", "calculate_skip_cooccurrences"], [1, 2, 1, "", "get_term_coocs"]], "fuzzy_search.similarity.SkipgramSimilarity": [[1, 2, 1, "", "index_terms"], [1, 2, 1, "", "rank_similar"]], "fuzzy_search.tokenization": [[6, 0, 0, "-", "string"], [6, 0, 0, "-", "token"], [6, 0, 0, "-", "vocabulary"]], "fuzzy_search.tokenization.string": [[6, 1, 1, "", "SkipGram"], [6, 3, 1, "", "get_non_word_prefix"], [6, 3, 1, "", "get_non_word_suffix"], [6, 3, 1, "", "insert_skips"], [6, 3, 1, "", "make_ngrams"], [6, 3, 1, "", "score_char_overlap"], [6, 3, 1, "", "score_char_overlap_ratio"], [6, 3, 1, "", "score_levenshtein_distance"], [6, 3, 1, "", "score_levenshtein_similarity_ratio"], [6, 3, 1, "", "score_ngram_overlap"], [6, 3, 1, "", "score_ngram_overlap_ratio"], [6, 3, 1, "", "strip_prefix"], [6, 3, 1, "", "strip_suffix"], [6, 3, 1, "", "text2skipgrams"]], "fuzzy_search.tokenization.token": [[6, 1, 1, "", "Annotation"], [6, 1, 1, "", "CustomTokenizer"], [6, 1, 1, "", "Doc"], [6, 1, 1, "", "RegExTokenizer"], [6, 1, 1, "", "Tag"], [6, 1, 1, "", "Token"], [6, 1, 1, "", "Tokenizer"], [6, 3, 1, "", "update_token"]], "fuzzy_search.tokenization.token.Doc": [[6, 2, 1, "", "add_annotations"], [6, 2, 1, "", "get_token"], [6, 2, 1, "", "has_token"], [6, 4, 1, "", "normalized"], [6, 4, 1, "", "original"]], "fuzzy_search.tokenization.token.Token": [[6, 2, 1, "", "has_label"], [6, 4, 1, "", "i"], [6, 4, 1, "", "l"], [6, 2, 1, "", "lower"], [6, 4, 1, "", "n"], [6, 4, 1, "", "t"], [6, 2, 1, "", "update"]], "fuzzy_search.tokenization.token.Tokenizer": [[6, 2, 1, "", "tokenize"]], "fuzzy_search.tokenization.vocabulary": [[6, 1, 1, "", "Vocabulary"]], "fuzzy_search.tokenization.vocabulary.Vocabulary": [[6, 2, 1, "", "add_terms"], [6, 2, 1, "", "has_term"], [6, 2, 1, "", "id2term"], [6, 2, 1, "", "reset_index"], [6, 2, 1, "", "term2id"]], "resolution_phrase_model": [[8, 3, 1, "", "read_republic_term_dict"]], "test": [[10, 0, 0, "-", "test_match_candidate"], [10, 0, 0, "-", "test_match_phrase"], [10, 0, 0, "-", "test_match_skip"], [10, 0, 0, "-", "test_pattern_template"], [10, 0, 0, "-", "test_phrase_phrase"], [10, 0, 0, "-", "test_phrase_phrase_model"], [10, 0, 0, "-", "test_search_context_searcher"], [10, 0, 0, "-", "test_search_phrase_searcher"], [10, 0, 0, "-", "test_search_searcher"], [10, 0, 0, "-", "test_search_template_searcher"], [10, 0, 0, "-", "test_search_token_searcher"], [10, 0, 0, "-", "test_similarity"], [10, 0, 0, "-", "test_tokenization_string"], [10, 0, 0, "-", "test_tokenization_token"], [10, 0, 0, "-", "test_tokenization_vocabulary"]], "test.test_match_candidate": [[10, 1, 1, "", "TestCandidate"]], "test.test_match_candidate.TestCandidate": [[10, 2, 1, "", "test_candidate_detects_no_match"], [10, 2, 1, "", "test_candidate_detects_no_match_with_no_skip_match"], [10, 2, 1, "", "test_candidate_has_skipgram_overlap"]], "test.test_match_phrase": [[10, 1, 1, "", "TestFuzzyMatch"], [10, 1, 1, "", "TestMatchAnnotation"], [10, 1, 1, "", "TestMatchInContext"]], "test.test_match_phrase.TestFuzzyMatch": [[10, 2, 1, "", "test_adjust_boundaries_finds_word_boundary"], [10, 2, 1, "", "test_adjust_boundaries_removes_surrounding_whitespace"], [10, 2, 1, "", "test_adjust_end"], [10, 2, 1, "", "test_adjust_end_does_not_shift_when_end_middle_of_next_word"], [10, 2, 1, "", "test_adjust_end_shifts_back_one_when_ending_with_whitespace"], [10, 2, 1, "", "test_adjust_end_shifts_back_one_when_phrase_ends_with_whitespace"], [10, 2, 1, "", "test_adjust_end_shifts_back_two_when_ending_with_whitespace_and_char"], [10, 2, 1, "", "test_adjust_end_shifts_to_end_of_next_word"], [10, 2, 1, "", "test_adjust_start"], [10, 2, 1, "", "test_adjust_start_does_not_shift_to_third_previous_character"], [10, 2, 1, "", "test_adjust_start_returns_when_in_middle_of_word"], [10, 2, 1, "", "test_adjust_start_shifts_to_next_character"], [10, 2, 1, "", "test_adjust_start_shifts_to_previous_character"], [10, 2, 1, "", "test_adjust_start_shifts_to_second_previous_characters"], [10, 2, 1, "", "test_map_string_maps_mixed_string"], [10, 2, 1, "", "test_map_string_maps_space_string"], [10, 2, 1, "", "test_map_string_maps_word_string"]], "test.test_match_phrase.TestMatchAnnotation": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_match_as_web_anno_has_label"], [10, 2, 1, "", "test_match_as_web_anno_has_multiple_bodies"], [10, 2, 1, "", "test_match_as_web_anno_skips_correction_with_exact_match"], [10, 2, 1, "", "test_match_in_context_as_web_anno_has_multiple_selectors"], [10, 2, 1, "", "test_match_in_context_as_web_anno_has_text_quote_selector"]], "test.test_match_phrase.TestMatchInContext": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_context_contains_text_from_doc"], [10, 2, 1, "", "test_context_is_adjustable"], [10, 2, 1, "", "test_make_match_in_context"]], "test.test_match_skip": [[10, 1, 1, "", "TestSkipMatches"]], "test.test_match_skip.TestSkipMatches": [[10, 2, 1, "", "test_skip_matches_registers_match"]], "test.test_pattern_template": [[10, 1, 1, "", "TestFuzzyTemplate"], [10, 1, 1, "", "TestFuzzyTemplateElement"], [10, 1, 1, "", "TestFuzzyTemplateGroup"], [10, 1, 1, "", "TestFuzzyTemplateWithRealData"]], "test.test_pattern_template.TestFuzzyTemplate": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_template_can_get_phrase_by_label"], [10, 2, 1, "", "test_template_can_ignore_element_with_unknown_label"], [10, 2, 1, "", "test_template_can_register_group_elements"], [10, 2, 1, "", "test_template_can_return_required_elements"], [10, 2, 1, "", "test_template_cannot_register_element_with_unknown_label"], [10, 2, 1, "", "test_template_generation"], [10, 2, 1, "", "test_template_get_phrase_by_label_returns_correct_phrase"], [10, 2, 1, "", "test_template_get_phrase_by_label_returns_phrase_object"], [10, 2, 1, "", "test_template_register_simple_element"], [10, 2, 1, "", "test_template_register_simple_element_as_multi_if_no_cardinality"], [10, 2, 1, "", "test_template_register_simple_element_with_list_labels"], [10, 2, 1, "", "test_template_returns_all_required_element_labels"], [10, 2, 1, "", "test_template_returns_all_required_elements"]], "test.test_pattern_template.TestFuzzyTemplateElement": [[10, 2, 1, "", "test_template_accepts_label_and_cardinality"], [10, 2, 1, "", "test_template_accepts_label_only"], [10, 2, 1, "", "test_template_rejects_invalid_cardinality_value"]], "test.test_pattern_template.TestFuzzyTemplateGroup": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_template_group_accepts_label_and_order"], [10, 2, 1, "", "test_template_group_accepts_label_only"]], "test.test_pattern_template.TestFuzzyTemplateWithRealData": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_template_can_read_real_data"]], "test.test_phrase_phrase": [[10, 1, 1, "", "Test"], [10, 1, 1, "", "TestFuzzyPhrase"], [10, 1, 1, "", "TestPhraseTokens"]], "test.test_phrase_phrase.Test": [[10, 2, 1, "", "test_skipgrams_have_correct_length"], [10, 2, 1, "", "test_text2skipgrams_accepts_positive_ngram_size"], [10, 2, 1, "", "test_text2skipgrams_rejects_negative_ngram_size"], [10, 2, 1, "", "test_text2skipgrams_rejects_negative_skip_size"]], "test.test_phrase_phrase.TestFuzzyPhrase": [[10, 2, 1, "", "test_fuzzy_phrase_accepts_phrase_as_dict"], [10, 2, 1, "", "test_fuzzy_phrase_accepts_phrase_as_string"], [10, 2, 1, "", "test_fuzzy_phrase_accepts_phrase_with_valid_list_of_strings_label"], [10, 2, 1, "", "test_fuzzy_phrase_accepts_phrase_with_valid_string_label"], [10, 2, 1, "", "test_fuzzy_phrase_can_set_max_start_end"], [10, 2, 1, "", "test_fuzzy_phrase_can_set_max_start_offset"], [10, 2, 1, "", "test_fuzzy_phrase_can_set_metadata"], [10, 2, 1, "", "test_fuzzy_phrase_cannot_set_negative_max_start_offset"], [10, 2, 1, "", "test_fuzzy_phrase_rejects_phrase_with_invalid_label"]], "test.test_phrase_phrase.TestPhraseTokens": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_phrase_can_take_tokenizer"], [10, 2, 1, "", "test_phrase_can_take_tokens"], [10, 2, 1, "", "test_phrase_with_tokens_has_token_index"], [10, 2, 1, "", "test_phrase_with_tokens_has_token_multi_index"]], "test.test_phrase_phrase_model": [[10, 1, 1, "", "Test"], [10, 1, 1, "", "TestPhraseModelTokenizer"]], "test.test_phrase_phrase_model.Test": [[10, 2, 1, "", "test_can_add_custom_key_value_pairs_to_phrase"], [10, 2, 1, "", "test_can_add_distractors"], [10, 2, 1, "", "test_can_add_label_as_list_to_phrase"], [10, 2, 1, "", "test_can_add_label_to_phrase"], [10, 2, 1, "", "test_can_add_variant_phrase"], [10, 2, 1, "", "test_can_configure_ngram_size"], [10, 2, 1, "", "test_can_get_json_representation"], [10, 2, 1, "", "test_making_empty_phrase_model"], [10, 2, 1, "", "test_making_phrase_model_with_list_of_keyword_strings"], [10, 2, 1, "", "test_making_phrase_model_with_list_of_phrase_dictionaries"], [10, 2, 1, "", "test_phrase_model_can_add_phrase"], [10, 2, 1, "", "test_phrase_model_can_remove_phrase"], [10, 2, 1, "", "test_phrase_model_indexes_phrase_words"]], "test.test_phrase_phrase_model.TestPhraseModelTokenizer": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_can_add_tokenizer_at_init"]], "test.test_search_context_searcher": [[10, 1, 1, "", "TestFuzzyContextSearcher"]], "test.test_search_context_searcher.TestFuzzyContextSearcher": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_fuzzy_context_searcher"], [10, 2, 1, "", "test_fuzzy_context_searcher_can_add_context"], [10, 2, 1, "", "test_fuzzy_context_searcher_can_search_context"], [10, 2, 1, "", "test_fuzzy_context_searcher_can_set_context_size"], [10, 2, 1, "", "test_fuzzy_context_searcher_finds_match_with_context"]], "test.test_search_phrase_searcher": [[10, 1, 1, "", "TestFuzzyPhraseSearcher"], [10, 1, 1, "", "TestFuzzySearchDistractors"], [10, 1, 1, "", "TestFuzzySearchExactMatch"], [10, 1, 1, "", "TestFuzzySearchVariants"], [10, 1, 1, "", "TestSearcherRealData"], [10, 1, 1, "", "TestSearcherRealData2"]], "test.test_search_phrase_searcher.TestFuzzyPhraseSearcher": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_can_add_phrases_as_phrase_objects"], [10, 2, 1, "", "test_can_add_phrases_as_strings"], [10, 2, 1, "", "test_can_filter_skipgram_threshold"], [10, 2, 1, "", "test_can_generate_skip_matches"], [10, 2, 1, "", "test_can_get_candidates"], [10, 2, 1, "", "test_can_make_default_phrase_searcher"], [10, 2, 1, "", "test_finds_multiple_candidates"], [10, 2, 1, "", "test_searcher_accepts_phrases_on_init"], [10, 2, 1, "", "test_searcher_accepts_tokenized_document"], [10, 2, 1, "", "test_searcher_allows_length_variance"], [10, 2, 1, "", "test_searcher_allows_length_variance_2"], [10, 2, 1, "", "test_searcher_finds_correct_start"], [10, 2, 1, "", "test_searcher_finds_near_match"], [10, 2, 1, "", "test_searcher_finds_repeat_phrases_as_multiple_matches"], [10, 2, 1, "", "test_searcher_handles_ignorecase"], [10, 2, 1, "", "test_searcher_is_case_sensitive"], [10, 2, 1, "", "test_searcher_uses_word_boundaries"]], "test.test_search_phrase_searcher.TestFuzzySearchDistractors": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_searcher_can_match_distractors"], [10, 2, 1, "", "test_searcher_can_register_distractors"], [10, 2, 1, "", "test_searcher_can_toggle_distractors"]], "test.test_search_phrase_searcher.TestFuzzySearchExactMatch": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_fuzzy_search_can_search_exact_match"], [10, 2, 1, "", "test_fuzzy_search_can_search_exact_match_with_special_characters"], [10, 2, 1, "", "test_fuzzy_search_can_search_exact_match_with_word_boundaries"], [10, 2, 1, "", "test_fuzzy_search_can_search_exact_match_without_word_boundaries"], [10, 2, 1, "", "test_text_split"]], "test.test_search_phrase_searcher.TestFuzzySearchVariants": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_searcher_can_match_variants"], [10, 2, 1, "", "test_searcher_can_register_variants"], [10, 2, 1, "", "test_searcher_can_toggle_variants"]], "test.test_search_phrase_searcher.TestSearcherRealData": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_fuzzy_search_text1_finds_attendants"], [10, 2, 1, "", "test_fuzzy_search_text1_finds_date"], [10, 2, 1, "", "test_fuzzy_search_text1_finds_four_matches"], [10, 2, 1, "", "test_fuzzy_search_text1_finds_friday"], [10, 2, 1, "", "test_fuzzy_search_text1_finds_president"], [10, 2, 1, "", "test_fuzzy_search_text2_finds_attendants"], [10, 2, 1, "", "test_fuzzy_search_text2_finds_date"], [10, 2, 1, "", "test_fuzzy_search_text2_finds_four_matches"], [10, 2, 1, "", "test_fuzzy_search_text2_finds_friday"], [10, 2, 1, "", "test_fuzzy_search_text2_finds_president"]], "test.test_search_phrase_searcher.TestSearcherRealData2": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_searcher_allows_length_variance_2"], [10, 2, 1, "", "test_searcher_allows_length_variance_3"], [10, 2, 1, "", "test_searcher_find_no_overlapping_variants"], [10, 2, 1, "", "test_searcher_finds_DONtfangen"], [10, 2, 1, "", "test_searcher_finds_long_opening"]], "test.test_search_searcher": [[10, 1, 1, "", "TestSearcher"]], "test.test_search_searcher.TestSearcher": [[10, 2, 1, "", "test_searcher_has_default_config"], [10, 2, 1, "", "test_searcher_has_default_tokenizer"], [10, 2, 1, "", "test_searcher_indexes_phrase_skipgram_phrase"], [10, 2, 1, "", "test_searcher_indexes_phrase_skipgrams"], [10, 2, 1, "", "test_searcher_indexes_phrase_tokens"], [10, 2, 1, "", "test_searcher_indexes_phrases"], [10, 2, 1, "", "test_searcher_passes_tokenizer_to_phrase_model"]], "test.test_search_template_searcher": [[10, 1, 1, "", "TestFuzzyTemplateSearcher"], [10, 1, 1, "", "TestFuzzyTemplateSearcherWithRealData"]], "test.test_search_template_searcher.TestFuzzyTemplateSearcher": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_add_template_sets_phrase_model"], [10, 2, 1, "", "test_can_add_template_at_init"], [10, 2, 1, "", "test_can_add_template_later"], [10, 2, 1, "", "test_can_make_searcher"], [10, 2, 1, "", "test_can_search_text"], [10, 2, 1, "", "test_configure_ngram_size"], [10, 2, 1, "", "test_search_text_returns_template_matches"], [10, 2, 1, "", "test_throws_error_for_mismatch_ngram_size"]], "test.test_search_template_searcher.TestFuzzyTemplateSearcherWithRealData": [[10, 2, 1, "", "prep_test"], [10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_search_text_finds_template_with_auction_test_1"], [10, 2, 1, "", "test_search_text_finds_template_with_auction_test_2"], [10, 2, 1, "", "test_search_text_finds_template_with_auction_test_3"], [10, 2, 1, "", "test_search_text_finds_template_with_auction_test_4"]], "test.test_search_token_searcher": [[10, 1, 1, "", "TestFindMatches"], [10, 1, 1, "", "TestPartialPhraseMatch"], [10, 1, 1, "", "TestTokenSearcher"], [10, 1, 1, "", "TestTokenSearcherMatchType"], [10, 1, 1, "", "TestTokenSearcherVariants"], [10, 1, 1, "", "TestTokenSearcherVocabulary"], [10, 3, 1, "", "get_token_match_types"]], "test.test_search_token_searcher.TestFindMatches": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_find_matches_accepts_text_dictionary"], [10, 2, 1, "", "test_find_matches_accepts_text_doc"], [10, 2, 1, "", "test_find_matches_accepts_text_string"], [10, 2, 1, "", "test_find_phrase_matches_filters_on_score_threshold"], [10, 2, 1, "", "test_find_phrase_matches_finds_best_option_per_text_range"], [10, 2, 1, "", "test_making_partial_match_picks_best_phrase_option"]], "test.test_search_token_searcher.TestPartialPhraseMatch": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_making_candidate_phrases_can_detect_term_swap"], [10, 2, 1, "", "test_making_partial_match_can_pop"], [10, 2, 1, "", "test_making_partial_match_discards_when_missing_phrase_token"], [10, 2, 1, "", "test_making_partial_match_does_not_duplicate_text_tokens"], [10, 2, 1, "", "test_making_partial_match_extends_phrase_tokens"], [10, 2, 1, "", "test_making_partial_match_extends_text_length"], [10, 2, 1, "", "test_making_partial_match_extends_text_tokens"], [10, 2, 1, "", "test_making_partial_match_picks_best_phrase_token_option"]], "test.test_search_token_searcher.TestTokenSearcher": [[10, 2, 1, "", "test_token_searcher_has_default_tokenizer"], [10, 2, 1, "", "test_token_searcher_has_token_skipgram_index"]], "test.test_search_token_searcher.TestTokenSearcherMatchType": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_get_match_type_finds_full_match"], [10, 2, 1, "", "test_get_match_type_finds_multi_text_token_match"], [10, 2, 1, "", "test_get_match_type_finds_partial_phrase_token_match"], [10, 2, 1, "", "test_get_match_type_finds_partial_text_token_match"], [10, 2, 1, "", "test_get_match_type_finds_same_text_token_match_for_multi_phrase_tokens"], [10, 2, 1, "", "test_token_searcher_finds_multiple_matches"], [10, 2, 1, "", "test_token_searcher_finds_partial_phrase_token_match"]], "test.test_search_token_searcher.TestTokenSearcherVariants": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_searcher_can_match_phrase_variants"]], "test.test_search_token_searcher.TestTokenSearcherVocabulary": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_searcher_can_have_vocab"], [10, 2, 1, "", "test_searcher_can_match_tokens_via_vocab"]], "test.test_similarity": [[10, 1, 1, "", "TestKeywordList"]], "test.test_similarity.TestKeywordList": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_keyword_list_accepts_list_of_string"], [10, 2, 1, "", "test_keyword_list_does_not_accept_list_of_dicts"], [10, 2, 1, "", "test_keyword_list_indexes_by_length"], [10, 2, 1, "", "test_keyword_list_indexes_multiple_occurrences_only_once"], [10, 2, 1, "", "test_keyword_pairs_obey_length_restrictions"]], "test.test_tokenization_string": [[10, 1, 1, "", "Test"]], "test.test_tokenization_string.Test": [[10, 2, 1, "", "test_make_ngrams_accepts_positive_integer"], [10, 2, 1, "", "test_make_ngrams_handles_size_one_correctly"], [10, 2, 1, "", "test_make_ngrams_handles_size_two_correctly"], [10, 2, 1, "", "test_make_ngrams_rejects_integer_larger_than_text_length"], [10, 2, 1, "", "test_make_ngrams_rejects_negative_size"], [10, 2, 1, "", "test_make_ngrams_rejects_non_integer_size"], [10, 2, 1, "", "test_make_ngrams_rejects_non_string_text"], [10, 2, 1, "", "test_score_char_overlap_with_self_is_len_of_self"], [10, 2, 1, "", "test_score_char_overlap_with_smaller_word_is_smaller_than_len_of_self"], [10, 2, 1, "", "test_score_levenshtein_similarity_with_self_is_len_of_self"], [10, 2, 1, "", "test_score_ngram_overlap_is_num_ngrams_for_self_comparison"], [10, 2, 1, "", "test_score_ngram_overlap_is_zero_for_comparison_with_empty"]], "test.test_tokenization_token": [[10, 1, 1, "", "TestToken"], [10, 1, 1, "", "TestTokenizer"]], "test.test_tokenization_token.TestToken": [[10, 2, 1, "", "test_tokenizer_lower_affects_normalised_string"], [10, 2, 1, "", "test_tokenizer_token_can_check_has_label"], [10, 2, 1, "", "test_tokenizer_token_can_have_label_set"], [10, 2, 1, "", "test_tokenizer_token_can_have_label_string"], [10, 2, 1, "", "test_tokenizer_token_has_normalised_string"], [10, 2, 1, "", "test_tokenizer_update_affects_normalised_string"], [10, 2, 1, "", "test_tokenizer_update_returns_new_token"]], "test.test_tokenization_token.TestTokenizer": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_tokenizer_can_add_boundaries"], [10, 2, 1, "", "test_tokenizer_defaults_to_no_boundary_tokens"], [10, 2, 1, "", "test_tokenizer_ignorecase_keeps_original_case_in_string"], [10, 2, 1, "", "test_tokenizer_ignorecase_lowercases_normalised_string"], [10, 2, 1, "", "test_tokenizer_returns_a_document_object"], [10, 2, 1, "", "test_tokenizer_tracks_char_index"]], "test.test_tokenization_vocabulary": [[10, 1, 1, "", "TestVocabulary"]], "test.test_tokenization_vocabulary.TestVocabulary": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_vocabulary_can_be_case_insensitive"], [10, 2, 1, "", "test_vocabulary_can_be_case_sensitive"], [10, 2, 1, "", "test_vocabulary_can_be_initialised_empty"], [10, 2, 1, "", "test_vocabulary_can_be_initialised_with_token_list"], [10, 2, 1, "", "test_vocabulary_can_be_initialised_with_word_list"], [10, 2, 1, "", "test_vocabulary_can_check_that_token_is_included"], [10, 2, 1, "", "test_vocabulary_can_check_that_word_is_included"], [10, 2, 1, "", "test_vocabulary_represents_words_by_integer"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "fuzzi": [0, 7], "search": [0, 5, 7], "": 0, "document": 0, "content": [0, 1, 2, 3, 4, 5, 6, 10], "indic": 0, "tabl": 0, "fuzzy_search": [1, 2, 3, 4, 5, 6], "packag": [1, 2, 3, 4, 5, 6, 10], "submodul": [1, 2, 3, 4, 5, 6, 10], "fuzzy_config": [], "modul": [1, 2, 3, 4, 5, 6, 8, 9, 10], "fuzzy_context_search": [], "attribut": 5, "fuzzy_match": [], "fuzzy_pattern": 3, "fuzzy_phras": [], "fuzzy_phrase_model": [], "fuzzy_phrase_search": [], "fuzzy_str": [], "fuzzy_templ": 3, "fuzzy_template_search": [], "similar": 1, "setup": 9, "test": 10, "test_fuzzy_context_search": [], "test_fuzzy_match": [], "test_fuzzy_phras": [], "test_fuzzy_phrase_model": [], "test_fuzzy_phrase_search": [], "test_fuzzy_str": [], "test_fuzzy_templ": [], "test_fuzzy_template_search": [], "subpackag": 1, "match": 2, "candidate_match": 2, "exact_match": 2, "phrase_match": 2, "skip_match": 2, "pattern": 3, "phrase": 4, "phrase_model": 4, "config": 5, "context_search": 5, "phrase_search": 5, "searcher": 5, "template_search": 5, "token_search": 5, "token": 6, "string": 6, "test_match_candid": 10, "test_match_phras": 10, "test_match_skip": 10, "test_pattern_templ": 10, "test_phrase_phras": 10, "test_phrase_phrase_model": 10, "test_search_context_search": 10, "test_search_phrase_search": 10, "test_search_search": 10, "test_search_template_search": 10, "test_search_token_search": 10, "test_tokenization_str": 10, "test_tokenization_token": 10, "vocabulari": 6, "resolution_phrase_model": 8, "test_similar": 10, "test_tokenization_vocabulari": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to fuzzy-search\u2019s documentation!": [[0, "welcome-to-fuzzy-search-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [10, "submodules"], [1, "submodules"]], "Module contents": [[2, "module-fuzzy_search.match"], [3, "module-fuzzy_search.pattern"], [4, "module-fuzzy_search.phrase"], [5, "module-fuzzy_search.search"], [6, "module-fuzzy_search.tokenization"], [10, "module-test"], [1, "module-fuzzy_search"]], "fuzzy_search.match package": [[2, "fuzzy-search-match-package"]], "fuzzy_search.match.candidate_match module": [[2, "module-fuzzy_search.match.candidate_match"]], "fuzzy_search.match.exact_match module": [[2, "module-fuzzy_search.match.exact_match"]], "fuzzy_search.match.phrase_match module": [[2, "module-fuzzy_search.match.phrase_match"]], "fuzzy_search.match.skip_match module": [[2, "module-fuzzy_search.match.skip_match"]], "fuzzy_search.pattern package": [[3, "fuzzy-search-pattern-package"]], "fuzzy_search.pattern.fuzzy_patterns module": [[3, "module-fuzzy_search.pattern.fuzzy_patterns"]], "fuzzy_search.pattern.fuzzy_template module": [[3, "module-fuzzy_search.pattern.fuzzy_template"]], "fuzzy_search.phrase package": [[4, "fuzzy-search-phrase-package"]], "fuzzy_search.phrase.phrase module": [[4, "module-fuzzy_search.phrase.phrase"]], "fuzzy_search.phrase.phrase_model module": [[4, "module-fuzzy_search.phrase.phrase_model"]], "fuzzy_search.search package": [[5, "fuzzy-search-search-package"]], "fuzzy_search.search.config module": [[5, "module-fuzzy_search.search.config"]], "fuzzy_search.search.context_searcher module": [[5, "module-fuzzy_search.search.context_searcher"]], "Attributes": [[5, "attributes"]], "fuzzy_search.search.phrase_searcher module": [[5, "module-fuzzy_search.search.phrase_searcher"]], "fuzzy_search.search.searcher module": [[5, "module-fuzzy_search.search.searcher"]], "fuzzy_search.search.template_searcher module": [[5, "module-fuzzy_search.search.template_searcher"]], "fuzzy_search.search.token_searcher module": [[5, "module-fuzzy_search.search.token_searcher"]], "fuzzy_search.tokenization package": [[6, "fuzzy-search-tokenization-package"]], "fuzzy_search.tokenization.string module": [[6, "module-fuzzy_search.tokenization.string"]], "fuzzy_search.tokenization.token module": [[6, "module-fuzzy_search.tokenization.token"]], "fuzzy_search.tokenization.vocabulary module": [[6, "module-fuzzy_search.tokenization.vocabulary"]], "fuzzy-search": [[7, "fuzzy-search"]], "resolution_phrase_model module": [[8, "module-resolution_phrase_model"]], "test package": [[10, "test-package"]], "test.test_match_candidate module": [[10, "module-test.test_match_candidate"]], "test.test_match_phrase module": [[10, "module-test.test_match_phrase"]], "test.test_match_skip module": [[10, "module-test.test_match_skip"]], "test.test_pattern_template module": [[10, "module-test.test_pattern_template"]], "test.test_phrase_phrase module": [[10, "module-test.test_phrase_phrase"]], "test.test_phrase_phrase_model module": [[10, "module-test.test_phrase_phrase_model"]], "test.test_search_context_searcher module": [[10, "module-test.test_search_context_searcher"]], "test.test_search_phrase_searcher module": [[10, "module-test.test_search_phrase_searcher"]], "test.test_search_searcher module": [[10, "module-test.test_search_searcher"]], "test.test_search_template_searcher module": [[10, "module-test.test_search_template_searcher"]], "test.test_search_token_searcher module": [[10, "module-test.test_search_token_searcher"]], "test.test_similarity module": [[10, "module-test.test_similarity"]], "test.test_tokenization_string module": [[10, "module-test.test_tokenization_string"]], "test.test_tokenization_token module": [[10, "module-test.test_tokenization_token"]], "test.test_tokenization_vocabulary module": [[10, "module-test.test_tokenization_vocabulary"]], "fuzzy_search package": [[1, "fuzzy-search-package"]], "Subpackages": [[1, "subpackages"]], "fuzzy_search.fuzzy_searcher module": [[1, "module-fuzzy_search.fuzzy_searcher"]], "fuzzy_search.similarity module": [[1, "module-fuzzy_search.similarity"]], "setup module": [[9, "setup-module"]]}, "indexentries": {}})